status = warn
name = properties_configuration

# Give directory path where log files should get stored
property.basePath = ./log/

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-6p %c{1}:%L - %m%n

# RollingFileAppender will print logs in file which can be rotated based on time or size
# Appender for Application
appender.rolling.type = RollingFile
appender.rolling.name = fileLoggerForApplication
appender.rolling.fileName= ${basePath}application-test.log
appender.rolling.filePattern= ${basePath}application-test_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-6p %c{1}:%L - %m%n
appender.rolling.policies.type = Policies
# Appender for Hibernate
appender.hibernate.type = RollingFile
appender.hibernate.name = fileLoggerForHibernate
appender.hibernate.fileName= ${basePath}hibernate-test.log
appender.hibernate.filePattern= ${basePath}hibernate-test_%d{yyyyMMdd}.log.gz
appender.hibernate.layout.type = PatternLayout
appender.hibernate.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-6p %c{1}:%L - %m%n
appender.hibernate.policies.type = Policies
# Appender for Spring
appender.spring.type = RollingFile
appender.spring.name = fileLoggerForSpring
appender.spring.fileName= ${basePath}spring-test.log
appender.spring.filePattern= ${basePath}spring-test_%d{yyyyMMdd}.log.gz
appender.spring.layout.type = PatternLayout
appender.spring.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-6p %c{1}:%L - %m%n
appender.spring.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
# Delete files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
# package "hello" - main package of application
logger.hello.name = hello
logger.hello.level = DEBUG
logger.hello.additivity = false
logger.hello.appenderRef.rolling.ref = fileLoggerForApplication
logger.hello.appenderRef.console.ref = consoleLogger
# package "org.hibernate" - for hibernate
logger.hibernate.name = org.hibernate
logger.hibernate.level = INFO
logger.hibernate.additivity = false
logger.hibernate.appenderRef.rolling.ref = fileLoggerForHibernate
logger.hibernate.appenderRef.console.ref = consoleLogger
# package "org.hibernate.SQL" - for hibernate sql
logger.hibernateSQL.name = org.hibernate.SQL
logger.hibernateSQL.level = DEBUG
logger.hibernateSQL.additivity = false
logger.hibernateSQL.appenderRef.rolling.ref = fileLoggerForHibernate
logger.hibernateSQL.appenderRef.console.ref = consoleLogger
# package "org.hibernate.type.descriptor.sql.BasicBinder" - for hibernate sql params
logger.hibernateDescriptorSQL.name = org.hibernate.type.descriptor.sql.BasicBinder
logger.hibernateDescriptorSQL.level = TRACE
logger.hibernateDescriptorSQL.additivity = false
logger.hibernateDescriptorSQL.appenderRef.rolling.ref = fileLoggerForHibernate
logger.hibernateDescriptorSQL.appenderRef.console.ref = consoleLogger
# package "org.springframework" - for spring
logger.spring.name = org.springframework
logger.spring.level = INFO
logger.spring.additivity = false
logger.spring.appenderRef.rolling.ref = fileLoggerForSpring
logger.spring.appenderRef.console.ref = consoleLogger

# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level = INFO
rootLogger.additivity = false
rootLogger.appenderRef.console.ref = consoleLogger